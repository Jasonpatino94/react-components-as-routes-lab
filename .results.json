{
  "stats": {
    "suites": 7,
    "tests": 24,
    "passes": 19,
    "pending": 0,
    "failures": 5,
    "start": "2021-03-06T22:23:20.049Z",
    "end": "2021-03-06T22:23:20.105Z",
    "duration": 56
  },
  "tests": [
    {
      "title": "should render one <h1 />, inside of a <div />",
      "fullTitle": "Actors should render one <h1 />, inside of a <div />",
      "duration": 1,
      "currentRetry": 0,
      "err": {
        "message": "expected 'div' to equal 'h1'",
        "showDiff": true,
        "actual": "div",
        "expected": "h1",
        "stack": "AssertionError: expected 'div' to equal 'h1'\n    at Context.<anonymous> (test/ActorsTest.js:24:50)\n    at processImmediate (node:internal/timers:463:21)"
      }
    },
    {
      "title": "should render 'Actors Page' inside of the <h1 />",
      "fullTitle": "Actors should render 'Actors Page' inside of the <h1 />",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should render a <div /> for each actor",
      "fullTitle": "Actors should render a <div /> for each actor",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should render the right content for each actor with a className of 'actor'",
      "fullTitle": "Actors should render the right content for each actor with a className of 'actor'",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "contains a <NavBar /> component",
      "fullTitle": "App contains a <NavBar /> component",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "contains a <Route path=\"/\">",
      "fullTitle": "App contains a <Route path=\"/\">",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "contains a <Route path=\"/actors\">",
      "fullTitle": "App contains a <Route path=\"/actors\">",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "contains a <Route path=\"/directors\">",
      "fullTitle": "App contains a <Route path=\"/directors\">",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "contains a <Route path=\"/movies\">",
      "fullTitle": "App contains a <Route path=\"/movies\">",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should render one <h1 /> first, inside of the <div />",
      "fullTitle": "Directors should render one <h1 /> first, inside of the <div />",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should render 'Directors Page' inside of the <h1 />",
      "fullTitle": "Directors should render 'Directors Page' inside of the <h1 />",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should render a <div /> for each director",
      "fullTitle": "Directors should render a <div /> for each director",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should render the right content for each director",
      "fullTitle": "Directors should render the right content for each director",
      "duration": 1,
      "currentRetry": 0,
      "err": {
        "message": "expected '<div>Scott Derrickson</div>' to include 'Doctor Strange'",
        "showDiff": false,
        "actual": "<div>Scott Derrickson</div>",
        "stack": "AssertionError: expected '<div>Scott Derrickson</div>' to include 'Doctor Strange'\n    at /mnt/c/Users/JASON/dev/flatiron/labs/react-components-as-routes-lab/test/DirectorsTest.js:40:32\n    at Array.forEach (<anonymous>)\n    at ShallowWrapper.<anonymous> (test/DirectorsTest.js:39:27)\n    at /mnt/c/Users/JASON/dev/flatiron/labs/react-components-as-routes-lab/node_modules/enzyme/build/ShallowWrapper.js:1262:21\n    at Array.forEach (<anonymous>)\n    at ShallowWrapper.forEach (node_modules/enzyme/build/ShallowWrapper.js:1261:33)\n    at Context.<anonymous> (test/DirectorsTest.js:37:24)\n    at processImmediate (node:internal/timers:463:21)"
      }
    },
    {
      "title": "should only render one <h1 /> inside of the <div />",
      "fullTitle": "Home should only render one <h1 /> inside of the <div />",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should render 'Home Page' inside of the <h1 />",
      "fullTitle": "Home should render 'Home Page' inside of the <h1 />",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should render one <h1 /> first, inside of the <div />",
      "fullTitle": "Movies should render one <h1 /> first, inside of the <div />",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should render 'Movies Page' inside of the <h1 />",
      "fullTitle": "Movies should render 'Movies Page' inside of the <h1 />",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "message": "expected 'Movie PageTitle: Doctor StrangeMetascore: 74Movie Length: 115Genres:ActionAdventureFantasy' to include 'Movies Page'",
        "showDiff": false,
        "actual": "Movie PageTitle: Doctor StrangeMetascore: 74Movie Length: 115Genres:ActionAdventureFantasy",
        "stack": "AssertionError: expected 'Movie PageTitle: Doctor StrangeMetascore: 74Movie Length: 115Genres:ActionAdventureFantasy' to include 'Movies Page'\n    at Context.<anonymous> (test/MoviesTest.js:27:50)\n    at processImmediate (node:internal/timers:463:21)"
      }
    },
    {
      "title": "should render a <div /> for each movie",
      "fullTitle": "Movies should render a <div /> for each movie",
      "duration": 1,
      "currentRetry": 0,
      "err": {
        "message": "expected 0 to equal 3",
        "showDiff": true,
        "actual": "0",
        "expected": "3",
        "stack": "AssertionError: expected 0 to equal 3\n    at Context.<anonymous> (test/MoviesTest.js:31:54)\n    at processImmediate (node:internal/timers:463:21)"
      }
    },
    {
      "title": "should render the right content for each movie",
      "fullTitle": "Movies should render the right content for each movie",
      "duration": 1,
      "currentRetry": 0,
      "err": {
        "message": "expected 0 to equal 3",
        "showDiff": true,
        "actual": "0",
        "expected": "3",
        "stack": "AssertionError: expected 0 to equal 3\n    at Context.<anonymous> (test/MoviesTest.js:36:39)\n    at processImmediate (node:internal/timers:463:21)"
      }
    },
    {
      "title": "wraps content in a div with .navbar class",
      "fullTitle": "NavBar wraps content in a div with .navbar class",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "renders a Home <NavLink>",
      "fullTitle": "NavBar navlinks renders a Home <NavLink>",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "renders a Movies <NavLink>",
      "fullTitle": "NavBar navlinks renders a Movies <NavLink>",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "renders an Actors <NavLink>",
      "fullTitle": "NavBar navlinks renders an Actors <NavLink>",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "renders a Directors <NavLink>",
      "fullTitle": "NavBar navlinks renders a Directors <NavLink>",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    }
  ],
  "pending": [],
  "failures": [
    {
      "title": "should render one <h1 />, inside of a <div />",
      "fullTitle": "Actors should render one <h1 />, inside of a <div />",
      "duration": 1,
      "currentRetry": 0,
      "err": {
        "message": "expected 'div' to equal 'h1'",
        "showDiff": true,
        "actual": "div",
        "expected": "h1",
        "stack": "AssertionError: expected 'div' to equal 'h1'\n    at Context.<anonymous> (test/ActorsTest.js:24:50)\n    at processImmediate (node:internal/timers:463:21)"
      }
    },
    {
      "title": "should render the right content for each director",
      "fullTitle": "Directors should render the right content for each director",
      "duration": 1,
      "currentRetry": 0,
      "err": {
        "message": "expected '<div>Scott Derrickson</div>' to include 'Doctor Strange'",
        "showDiff": false,
        "actual": "<div>Scott Derrickson</div>",
        "stack": "AssertionError: expected '<div>Scott Derrickson</div>' to include 'Doctor Strange'\n    at /mnt/c/Users/JASON/dev/flatiron/labs/react-components-as-routes-lab/test/DirectorsTest.js:40:32\n    at Array.forEach (<anonymous>)\n    at ShallowWrapper.<anonymous> (test/DirectorsTest.js:39:27)\n    at /mnt/c/Users/JASON/dev/flatiron/labs/react-components-as-routes-lab/node_modules/enzyme/build/ShallowWrapper.js:1262:21\n    at Array.forEach (<anonymous>)\n    at ShallowWrapper.forEach (node_modules/enzyme/build/ShallowWrapper.js:1261:33)\n    at Context.<anonymous> (test/DirectorsTest.js:37:24)\n    at processImmediate (node:internal/timers:463:21)"
      }
    },
    {
      "title": "should render 'Movies Page' inside of the <h1 />",
      "fullTitle": "Movies should render 'Movies Page' inside of the <h1 />",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "message": "expected 'Movie PageTitle: Doctor StrangeMetascore: 74Movie Length: 115Genres:ActionAdventureFantasy' to include 'Movies Page'",
        "showDiff": false,
        "actual": "Movie PageTitle: Doctor StrangeMetascore: 74Movie Length: 115Genres:ActionAdventureFantasy",
        "stack": "AssertionError: expected 'Movie PageTitle: Doctor StrangeMetascore: 74Movie Length: 115Genres:ActionAdventureFantasy' to include 'Movies Page'\n    at Context.<anonymous> (test/MoviesTest.js:27:50)\n    at processImmediate (node:internal/timers:463:21)"
      }
    },
    {
      "title": "should render a <div /> for each movie",
      "fullTitle": "Movies should render a <div /> for each movie",
      "duration": 1,
      "currentRetry": 0,
      "err": {
        "message": "expected 0 to equal 3",
        "showDiff": true,
        "actual": "0",
        "expected": "3",
        "stack": "AssertionError: expected 0 to equal 3\n    at Context.<anonymous> (test/MoviesTest.js:31:54)\n    at processImmediate (node:internal/timers:463:21)"
      }
    },
    {
      "title": "should render the right content for each movie",
      "fullTitle": "Movies should render the right content for each movie",
      "duration": 1,
      "currentRetry": 0,
      "err": {
        "message": "expected 0 to equal 3",
        "showDiff": true,
        "actual": "0",
        "expected": "3",
        "stack": "AssertionError: expected 0 to equal 3\n    at Context.<anonymous> (test/MoviesTest.js:36:39)\n    at processImmediate (node:internal/timers:463:21)"
      }
    }
  ],
  "passes": [
    {
      "title": "should render 'Actors Page' inside of the <h1 />",
      "fullTitle": "Actors should render 'Actors Page' inside of the <h1 />",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should render a <div /> for each actor",
      "fullTitle": "Actors should render a <div /> for each actor",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should render the right content for each actor with a className of 'actor'",
      "fullTitle": "Actors should render the right content for each actor with a className of 'actor'",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "contains a <NavBar /> component",
      "fullTitle": "App contains a <NavBar /> component",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "contains a <Route path=\"/\">",
      "fullTitle": "App contains a <Route path=\"/\">",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "contains a <Route path=\"/actors\">",
      "fullTitle": "App contains a <Route path=\"/actors\">",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "contains a <Route path=\"/directors\">",
      "fullTitle": "App contains a <Route path=\"/directors\">",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "contains a <Route path=\"/movies\">",
      "fullTitle": "App contains a <Route path=\"/movies\">",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should render one <h1 /> first, inside of the <div />",
      "fullTitle": "Directors should render one <h1 /> first, inside of the <div />",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should render 'Directors Page' inside of the <h1 />",
      "fullTitle": "Directors should render 'Directors Page' inside of the <h1 />",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should render a <div /> for each director",
      "fullTitle": "Directors should render a <div /> for each director",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should only render one <h1 /> inside of the <div />",
      "fullTitle": "Home should only render one <h1 /> inside of the <div />",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should render 'Home Page' inside of the <h1 />",
      "fullTitle": "Home should render 'Home Page' inside of the <h1 />",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should render one <h1 /> first, inside of the <div />",
      "fullTitle": "Movies should render one <h1 /> first, inside of the <div />",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "wraps content in a div with .navbar class",
      "fullTitle": "NavBar wraps content in a div with .navbar class",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "renders a Home <NavLink>",
      "fullTitle": "NavBar navlinks renders a Home <NavLink>",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "renders a Movies <NavLink>",
      "fullTitle": "NavBar navlinks renders a Movies <NavLink>",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "renders an Actors <NavLink>",
      "fullTitle": "NavBar navlinks renders an Actors <NavLink>",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "renders a Directors <NavLink>",
      "fullTitle": "NavBar navlinks renders a Directors <NavLink>",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    }
  ]
}